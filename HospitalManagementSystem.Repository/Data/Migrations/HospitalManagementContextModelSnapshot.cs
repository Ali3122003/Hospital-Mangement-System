// <auto-generated />
using System;
using HospitalManagementSystem.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagementSystem.Repository.Data.Migrations
{
    [DbContext(typeof(HospitalManagementContext))]
    partial class HospitalManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("AppointmentId")
                        .HasName("PK__Appointm__8ECDFCC233D640B7");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BED195DED3C");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Specialty")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("DoctorId")
                        .HasName("PK__Doctors__2DC00EBFFC514652");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("PatientId")
                        .HasName("PK__Patients__970EC3660B29EE3F");

                    b.HasIndex("RoomId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.PatientTreatment", b =>
                {
                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ObtainDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.HasKey("PatientId", "TreatmentId", "ObtainDate")
                        .HasName("PK__PatientT__434AAD784772C2B9");

                    b.HasIndex("TreatmentId");

                    b.ToTable("PatientTreatments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("Occupied")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("RoomId")
                        .HasName("PK__Rooms__328639397843C3FE");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Treatment", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TreatmentId"));

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TreatmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("TreatmentId")
                        .HasName("PK__Treatmen__1A57B7F1BC0A80AA");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Appointment", b =>
                {
                    b.HasOne("HospitalManagementSystem.Core.Models.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Docto__49C3F6B7");

                    b.HasOne("HospitalManagementSystem.Core.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Patie__48CFD27E");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Doctor", b =>
                {
                    b.HasOne("HospitalManagementSystem.Core.Models.Department", "Department")
                        .WithMany("Doctors")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Doctors__Departm__3C69FB99");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Patient", b =>
                {
                    b.HasOne("HospitalManagementSystem.Core.Models.Room", "Room")
                        .WithMany("Patients")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("FK__Patients__RoomId__403A8C7D");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.PatientTreatment", b =>
                {
                    b.HasOne("HospitalManagementSystem.Core.Models.Patient", "Patient")
                        .WithMany("PatientTreatments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__PatientTr__Patie__44FF419A");

                    b.HasOne("HospitalManagementSystem.Core.Models.Treatment", "Treatment")
                        .WithMany("PatientTreatments")
                        .HasForeignKey("TreatmentId")
                        .IsRequired()
                        .HasConstraintName("FK__PatientTr__Treat__45F365D3");

                    b.Navigation("Patient");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Department", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PatientTreatments");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Room", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("HospitalManagementSystem.Core.Models.Treatment", b =>
                {
                    b.Navigation("PatientTreatments");
                });
#pragma warning restore 612, 618
        }
    }
}
